@model Portfolio.Models.JobRecordSystem.JobRecordsViewModel

@{

}

@section CSS {
    <style>
        .border_width_1px{
            border-width: 1px;
        }
    </style>
}

<div class="row">
    <div class="col-1"></div>
    <div class="col-10">

        <div class="row mx-auto justify-content-start align-items-start mt-3">
            <div class="mb-0">
                <a asp-controller="JobRecordSystem" asp-action="JobRecordsCreateCase" class="btn btn-primary">建立新案件</a>
                <a asp-controller="JobRecordSystem" asp-action="JobRecordsCreateCase" class="btn btn-warning">批次建案</a>
                <a asp-controller="JobRecordSystem" asp-action="JobRecordsCreateCase" class="btn btn-info">批次留言</a>
            </div>
        </div>

        <hr />

        @using (Html.BeginForm("JobRecordSystemIndex", "JobRecordSystem", FormMethod.Get, new { @class = "mb-2" }))
        {
            <div class="h4 font-weight-bold">進階搜尋</div>
            <div class="row mx-auto justify-content-start align-items-start">
                <div class="form-group mx-2">
                    @Html.TextBox("CaseId", ViewData["CaseId"] as string, htmlAttributes: new { @class = "form-control-sm border_width_1px", @placeholder = "請輸入案件編號" })
                </div>
                <div class="form-group mx-2">
                    @Html.TextBox("UserName", ViewData["UserName"] as string, htmlAttributes: new { @class = "form-control-sm border_width_1px", @placeholder = "請輸入報案人員名稱" })
                </div>
                <div class="form-group mx-2">
                    @Html.TextBox("HostName", ViewData["HostName"] as string, htmlAttributes: new { @class = "form-control-sm border_width_1px", @placeholder = "請輸入電腦名稱" })
                </div>
            </div>
            <div class="row mx-auto justify-content-start align-items-start">
                <div class="form-group mx-2">
                    @Html.DropDownList("CaseStatus", Model.JobRecordsCaseStatusItemList, "請選擇案件狀態", new { @class = "form-control-sm" })
                </div>
                <div class="form-group mx-2">
                    @Html.DropDownList("Location", Model.JobRecordsLocationItemList, "請選擇報案區域", new { @class = "form-control-sm" })
                </div>
                <div class="form-group mx-2">
                    @Html.DropDownList("OnsiteName", Model.JobRecordsOnsiteItemList, "請選擇處理人員", new { @class = "form-control-sm" })
                </div>

                <div class="form-group mx-2">
                    @Html.DropDownList("ProductType", Model.JobRecordsProductTypeList, "請選擇產品類型", new { @class = "form-control-sm" })
                </div>
                <div class="form-group mx-2">
                    @Html.DropDownList("OSVersion", Model.JobRecordsOSVersionList, "請選擇系統類型", new { @class = "form-control-sm" })
                </div>
                <div class="form-group mx-2">
                    @Html.DropDownList("Category", Model.JobRecordsCategoryList, "請選擇案件分類", new { @class = "form-control-sm" })
                </div>
            </div>
            <div class="row mx-auto justify-content-start align-items-start">
                <button type="submit" class="btn btn-success mx-2">搜尋</button>
                @Html.ActionLink("清除搜尋結果", "JobRecordSystemIndex", "JobRecordSystem", new { }, new { @class = "btn btn-danger mx-2" })
                @*@Html.ActionLink("匯出日誌", "JobsRecordExport", "JobsRecord", null, new { @class = "btn btn-primary ml-3" })*@
            </div>
        }

        <hr />

        <div class="h4 font-weight-bold mt-3">案件列表</div>

        <div class="container-fluid">
            <table class="table table-bordered border-dark mb-2">
                <thead>
                    <tr class="text-center bg-dark text-white h5">
                        <th class="border-bottom-0 width10">
                            @*@Html.DisplayNameFor(model => model.JobRecordsPagedList.First().CaseId)*@
                            案件編號
                        </th>
                        <th class="border-bottom-0 width10">
                            案件狀態
                        </th>
                        <th class="border-bottom-0 width10">
                            建案日期
                        </th>
                        <th class="border-bottom-0 width20">
                            案件標題
                        </th>
                        <th class="border-bottom-0 width10">
                            廠區
                        </th>
                        <th class="border-bottom-0 width10">
                            報案人員
                        </th>
                        <th class="border-bottom-0 width10">
                            駐廠人員
                        </th>
                        <th class="border-bottom-0 width10">
                            電腦名稱
                        </th>
                        <th class="border-bottom-0 width10">

                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.JobRecordsPagedList)
                    {
                        <tr class="text-center">
                            <td class="width10">
                                @Html.DisplayFor(modelItem => item.CaseId)
                            </td>
                            @foreach (var s in Model.JobRecordsCaseStatusItemList)
                            {
                                if (item.CaseStatus == Convert.ToInt32(s.Value))
                                {
                                    <td class="width10">@s.Text</td>
                                }
                            }
                            <td class="width10">
                                @Convert.ToDateTime(item.BuildDate).ToString("yyyy/MM/dd")
                            </td>
                            <td class="width20">
                                @Html.DisplayFor(modelItem => item.CaseTitle)
                            </td>
                            @foreach (var L in Model.JobRecordsLocationItemList)
                            {
                                if (item.Location == Convert.ToInt32(L.Value))
                                {
                                    <td class="width10">@L.Text</td>
                                }
                            }
                            <td class="width10">
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>
                            <td class="width10">
                                @Html.DisplayFor(modelItem => item.OnsiteName)
                            </td>
                            <td class="width10">
                                @Html.DisplayFor(modelItem => item.HostName)
                            </td>
                            <td class="width10">
                                @Html.ActionLink("詳細內容", "JobRecordsSingleCaseDetail", new { id = item.CaseId }, new { @class = "btn btn-success" })
                                @*@if (item.CaseIsClosed == "1")
                            {
                                @Html.ActionLink("編輯", "Edit", new { id = item.CaseId }, new { @class = "btn btn-primary disabled" })
                            }
                            else
                            {
                                @Html.ActionLink("編輯", "Edit", new { id = item.CaseId }, new { @class = "btn btn-primary" })
                            }
                            |
                            @Html.ActionLink("刪除", "Delete", new { id = item.CaseId }, new { @class = "btn btn-danger" })*@
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @Html.PagedListPager((IPagedList)Model.JobRecordsPagedList, Page => Url.Action("JobRecordSystemIndex", new { Page, CaseId = ViewData["CaseId"], CaseStatus = ViewData["CaseStatus"], Location = ViewData["Location"], OnsiteName = ViewData["OnsiteName"], UserName = ViewData["UserName"], HostName = ViewData["HostName"], PageSize = ViewData["PageSize"] }),
       new PagedListRenderOptions
       {
         LinkToFirstPageFormat = "首頁",
         LinkToNextPageFormat = "下一頁",
         LinkToPreviousPageFormat = "上一頁",
         LinkToLastPageFormat = "末頁",
         MaximumPageNumbersToDisplay = 7,
         DisplayItemSliceAndTotal = false,
         UlElementClasses = new string[] { "pagination" },
         LiElementClasses = new string[] { "page-item" },
         PageClasses = new string[] { "page-link" }
       })

    </div>
    <div class="col-1"></div>
</div>

