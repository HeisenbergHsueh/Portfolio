@{ 
    #region 設定中英切換的按鈕所顯示的連結為當下user所在的頁面
    var request = Context.Request;
    string UrlPath = request.Path.ToString();
    string ChineseMode = "";
    string EnglishMode = "";

    if(UrlPath.Contains("zh-TW"))
    {
        ChineseMode = $"{request.Scheme}://{request.Host}{UrlPath}";
        var SwitchToEnglishPath = UrlPath.Replace("zh-TW", "en-US");
        EnglishMode = $"{request.Scheme}://{request.Host}{SwitchToEnglishPath}";
    }
    else if (UrlPath.Contains("en-US"))
    {
        EnglishMode = $"{request.Scheme}://{request.Host}{UrlPath}";
        var SwitchToChinesePath = UrlPath.Replace("en-US", "zh-TW");
        ChineseMode = $"{request.Scheme}://{request.Host}{SwitchToChinesePath}";
    }
    else
    {
        ChineseMode = $"{request.Scheme}://{request.Host}/zh-TW";
        EnglishMode = $"{request.Scheme}://{request.Host}/en-US";
    }
    #endregion

    #region 使用資源檔做語系切換，此頁面使用的資源檔為 : _Layout.zh-TW.resx、_Layout.en-US.resx
    ViewData["Website_title"] = Localizer["Website_title"];
    ViewData["Website_zh"] = Localizer["Website_zh"];
    ViewData["Website_en"] = Localizer["Website_en"];

    ViewData["Website_Profile"] = Localizer["Website_Profile"];
    ViewData["Website_LoginSystem"] = Localizer["Website_LoginSystem"];
    ViewData["Website_LoginSystem_Index"] = Localizer["Website_LoginSystem_Index"];

    ViewData["Website_JobRecordSystem"] = Localizer["Website_JobRecordSystem"];
    ViewData["Website_JobRecordSystem_Index"] = Localizer["Website_JobRecordSystem_Index"];

    ViewData["Website_Security_Tool"] = Localizer["Website_Security_Tool"];

    ViewData["Website_LoginSystem_Login"] = Localizer["Website_LoginSystem_Login"];
    ViewData["Website_LoginSystem_Logout"] = Localizer["Website_LoginSystem_Logout"];
    #endregion
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Website_title"]</title>
    <link rel="icon" type="image/x-icon" href="~/Images/H_icon.jpg" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />

    @* RenderSection的用途是讓軟體工程師可以從View中將js、css檔案或一段程式碼放到Layout的區塊 *@
    @* 舉例來說，假設在Home/Index，create了一個區塊(CSS)，並在此區塊中，引用了一個style.css的檔案，最後ASP.net core的網站編譯時 *@
    @* 則會將引用的style.css放置到 @RenderSection("CSS", required: false)所在的位置，所以使用chrome的開發人員檢視工具*@
    @* 就會看到引用style.css的code出現在head tag中，下方的@RenderSection("Scripts", required: false)也是同樣用途*@
    @* 只不過一個取名CSS，用來放CSS檔案，一個取名Scripts，用來放js檔案 *@
    @* 參考資料 : https://ithelp.ithome.com.tw/articles/10159990 *@
    @RenderSection("CSS", required: false)

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <span class="navbar-brand">
                <img src="~/Images/H_icon.jpg" width="30" height="30">
                @ViewData["Website_title"]
            </span>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Home" asp-action="Profile">@ViewData["Website_Profile"]</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link text-white dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown">
                            @ViewData["Website_LoginSystem"]
                        </a>
                        <div class="dropdown-menu m-0">
                            <a class="dropdown-item" asp-controller="LoginSystem" asp-action="Login">@ViewData["Website_LoginSystem_Index"]</a>
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link text-white dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown">
                            @ViewData["Website_JobRecordSystem"]
                        </a>
                        <div class="dropdown-menu m-0">
                            <a class="dropdown-item" asp-controller="JobRecordSystem" asp-action="JobRecordSystemIndex">@ViewData["Website_JobRecordSystem_Index"]</a>
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link text-white dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown">
                            @ViewData["Website_Security_Tool"]
                        </a>
                        <div class="dropdown-menu m-0">
                            <a class="dropdown-item" href="#">防毒偵測工具</a>
                        </div>
                    </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a class="nav-link text-white border mx-1 Layout_a_noborder" href="@EnglishMode">@ViewData["Website_en"]</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white border mx-1 Layout_a_noborder" href="@ChineseMode">@ViewData["Website_zh"]</a>
                    </li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item">
                            <span class="nav-link text-white Layout_span_diplaynone">Hello @User.Identity.Name</span>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white border mx-1 Layout_a_noborder" asp-controller="LoginSystem" asp-action="Logout">@ViewData["Website_LoginSystem_Logout"]</a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link text-white border mx-1 Layout_a_noborder" asp-controller="LoginSystem" asp-action="Login">@ViewData["Website_LoginSystem_Login"]</a>
                        </li>
                    }
                </ul>
            </div>
        </nav>
    </header>

    <div class="container-fluid">
        <main role="main" class="pb-3">
            @* @RenderBody()的用途與@RenderSection()類似，主要是將View的內容放進來 *@
            @* 當網站開始編譯之後，首先會先渲染_ViewStart.cshtml的部分，接著會渲染View(ex.Home/Index)的部分，最後才會把Layout的內容渲染進來 *@
            @RenderBody()
        </main>
    </div>

    @RenderSection("Footer", required: false)

    <script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js" asp-append-version="true"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
